==========================
Developer Information File
==========================



Known preprocessor switches:
- SDL: Defined for the SDL version
- GBA_LOGGING: Enables logging for the GBA core
- FINAL_VERSION: Defined for release versions, disables additional GBA logging and completely disables GB logging. Increases the amount of CPU cycles being emulated in one go.
- BKPT_SUPPORT
- MMX: Enable MMX instruction set
- NO_ASM: Use C++ version of hq3x/4x filters
- RGB555: Use 16bit colors with 5bit green instead of 6bit green in hq3x/4x filters (C++ version)
- NO_OGL: Exclude OpenGL code
- NO_D3D: Exclude Direct3D code
- NO_OAL: Exclude OpenAL code
- NO_XAUDIO2: Exclude XAudio2 code (the XAudio2 interface is DirectSound's successor)



Download locations:
NASM:         http://nasm.sourceforge.net/
DirectX SDK:  http://msdn2.microsoft.com/en-us/xna/aa937788.aspx
OpenAL SDK:   http://connect.creativelabs.com/openal/default.aspx
OpenGL files: http://www.opengl.org/registry/
zlib:         http://zlib.net/
libpng:       http://libpng.org/pub/png/libpng.html
UPX:          http://upx.sourceforge.net/

You can find pre-built versions of zlib & libpng at:
http://vba-m.ngemu.com/vbam/vbasources/libs/
Just extract them somewhere and point Visual C++ 2008 to the include & lib folders.
They are built with the static C runtime (this is what the releases use).



#################################
# Visual C++ 2008 project files #
#################################

Using Microsoft Visual C++ 2008, you can build the Win32/MFC and the Win32/Qt build.
Refer to the instructions below for further assistance:

===Win32/MFC===
This is the full-featured Windows build using the MFC GUI.
The project files are located in trunk/project/vc2008_mfc (VBA2008.sln).
Before you can compile it, you have to take care of some prerequisites:
Download the zlib & libpng sources from the internet and extract them both to the same folder.
Rename them so you have a folder called libpng and another one called zlib in the same loaction.
Open libpng/projects/visualc71/libpng.sln. Let the assistant convert them if necessary.
Build the "DLL Release" & "DLL Debug" configurations.
Set up your operating system's PATH variable to point to the created zlib & libpng DLLs.
Set up your compiler's LIB & INCLUDE paths to point to the created lib files and the source files.
You also have to install Microsoft's DirectX SDK for DirectInput & XAudio2.
If you want to enable OpenAL sound output, install the OpenAL SDK. If you do not want it, #define NO_OAL.
Some pixel filters come with assembler code, which compatible to the NASM syntax.
Extract NASM somewhere and add it to your compiler's executable file paths.
All .asm files will be handled with the "nasm.rules" build rules file which comes with this project file.

===Win32/Qt===
The MS Visual C++ 2008 Express-compatible project file can be found in trunk/project/vc2008_qt.
It uses the qmake file in trunk/project/qmake, so you always have to add files to the VC++ project file AND the qmake file!
IMPORTANT: The Qt-sources have to be compiled with the Microsoft compiler first, in order to use it,
because the default binary distribution was compiled with mingw and will not work with the MS Compiler.
Continue by reading "How to compile Qt from source with Visual C++ 2008".
The release build will automatically be compressed with UPX, make sure to download it and point MSVC++ to it.



######################################################
# How to compile Qt from source with Visual C++ 2008 #
######################################################
- Download the latest Qt source code archive from http://trolltech.com/developer/downloads/qt/windows
 - You want "qt-win-opensource-src-x.x.x.zip", not "qt-win-opensource-x.x.x-mingw.exe"
 - This how-to was witten when Qt 4.4.1 was the current version. 
- Extract the archive somewhere.
- Start a Visual Studio build command promt and cd to the extracted files.
 - You can find it in the start menu in "Microsoft Visual Studio 2008\Visual Studio Tools\Visual Studio 2008 Command Prompt".
- Type & run "configure -release -fast -no-qt3support -platform win32-msvc2008"
- When configure finished, simply run "nmake" and get yourself a coffee or ten.
- When nmake finished and you've become a coffee addict, add the created lib files to your Visual Studio paths, do the same for the include paths.
